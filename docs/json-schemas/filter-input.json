{
  "$id": "https://raw.githubusercontent.com/MAIF/yozefu/refs/heads/main/docs/json-schemas/filter-input.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "FilterInput",
  "description": "Input for a search filter",
  "type": "object",
  "properties": {
    "record": {
      "description": "The kafka record to evaluate against the filter.",
      "$ref": "#/$defs/KafkaRecord"
    },
    "params": {
      "description": "The user-provided parameters for the filter.",
      "type": "array",
      "items": true
    }
  },
  "required": [
    "record",
    "params"
  ],
  "$defs": {
    "KafkaRecord": {
      "description": "Inspired of the `[rdkafka::Message]` struct.\nCurrently, we only support utf-8 string keys/values/headers.",
      "type": "object",
      "properties": {
        "topic": {
          "type": "string"
        },
        "timestamp": {
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "partition": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "key_schema": {
          "anyOf": [
            {
              "$ref": "#/$defs/Schema"
            },
            {
              "type": "null"
            }
          ]
        },
        "value_schema": {
          "anyOf": [
            {
              "$ref": "#/$defs/Schema"
            },
            {
              "type": "null"
            }
          ]
        },
        "size": {
          "description": "Number of bytes for the key + the value",
          "type": "integer",
          "format": "uint",
          "minimum": 0,
          "default": 0
        },
        "key": {
          "description": "A human-readable representation of the key",
          "$ref": "#/$defs/DataType"
        },
        "key_as_string": {
          "type": "string",
          "writeOnly": true
        },
        "value": {
          "description": "A human-readable representation of the value",
          "$ref": "#/$defs/DataType"
        },
        "value_as_string": {
          "description": "The value as a string. needed to be displayed in the TUI",
          "type": "string",
          "writeOnly": true
        }
      },
      "required": [
        "topic",
        "partition",
        "offset",
        "headers",
        "key",
        "value"
      ]
    },
    "Schema": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/$defs/SchemaId"
        },
        "schema_type": {
          "anyOf": [
            {
              "$ref": "#/$defs/SchemaType"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "id"
      ]
    },
    "SchemaId": {
      "type": "integer",
      "format": "uint32",
      "minimum": 0
    },
    "SchemaType": {
      "type": "string",
      "enum": [
        "JSON",
        "AVRO",
        "PROTOBUF"
      ]
    },
    "DataType": {
      "anyOf": [
        true,
        {
          "type": "string"
        }
      ]
    }
  }
}