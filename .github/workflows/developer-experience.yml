name: Developer Experience

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTDOCFLAGS: '--deny warnings'
  MINIMUM_SUPPORTED_RUST_VERSION: 1.85.0
  GOLANG_VERSION: 1.23.3
  JS_VERSION: 22

on:
  schedule:
    - cron: "0 0 1 * *"
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  try-it:
   runs-on: ubuntu-latest
   permissions:
    contents: read
   steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Setup JBang
        uses: jbangdev/setup-jbang@main
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Run try-it.sh
        run: bash docs/try-it.sh 
        env: 
          YOZEFU_API_URL: http://localhost:8081/schemas/types

  wasm-rust:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Setup Go ${{ env.GOLANG_VERSION }}
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Install extism CLI
        run: go install github.com/extism/cli/extism@latest
      - uses: Swatinem/rust-cache@v2
      - name: Temporary fix in Cargo.toml
        run: sed -i -E 's#git = "ssh.+#path = "../../wasm-types" }#g' crates/wasm-blueprints/rust/Cargo.toml
      - name: Build a Rust search filter
        run: make -C crates/wasm-blueprints/rust/ build test

  wasm-golang:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Setup Go ${{ env.GOLANG_VERSION }}
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Install extism CLI
        run: go install github.com/extism/cli/extism@latest
      - uses: acifani/setup-tinygo@v2
        with:
          tinygo-version: '0.34.0'
      - name: Build a Golang search filter
        run: make -C crates/wasm-blueprints/golang/ build test

  wasm-js:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Setup JS ${{ env.JS_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.JS_VERSION }}
      - name: Setup Go ${{ env.GOLANG_VERSION }}
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Install extism CLI
        run: go install github.com/extism/cli/extism@latest
      - name: Build a JS search filter
        run: make -C crates/wasm-blueprints/js/ build test
        continue-on-error: true


  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    continue-on-error: true
    strategy:
      matrix:
        package:
          - name: rust
            directory: ./crates/wasm-blueprints/rust/
          - name: golang
            directory: ./crates/wasm-blueprints/golang/
          - name: js
            directory: ./crates/wasm-blueprints/js/
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Run docker build
        run: docker build ${{ matrix.package.directory }}