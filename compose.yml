services:

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    container_name: yozefu-kafka
    ports:
        - "9092:9092"
        - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:19092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'INTERNAL://kafka:19092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'

  schema-registry:
    image: confluentinc/cp-schema-registry:7.7.1
    hostname: schema-registry
    container_name: yozefu-schema-registry
    depends_on:
      - kafka
    ports:
      - "${SCHEMA_REGISTRY_PORT:-8081}:${SCHEMA_REGISTRY_PORT:-8081}"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:19092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:${SCHEMA_REGISTRY_PORT:-8081}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SCHEMA_REGISTRY_PORT:-8081}/subjects"]
      interval: 2s
      timeout: 1s
      retries: 10

  yozefu:
    container_name: yozefu
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped

  akhq:
    container_name: yozefu-akhq
    image: tchiotludo/akhq
    restart: unless-stopped
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka-localhost-server:
              properties:
                bootstrap.servers: "kafka:19092"
              schema-registry:
                type: "confluent"
                url: "http://schema-registry:${SCHEMA_REGISTRY_PORT:-8081}"
    ports:
      - "9000:8080"

  redpanda-console:
    profiles: ["disabled"]
    container_name: yozefu-redpanda-console
    image: docker.redpanda.com/redpandadata/console:latest
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:19092"]
          schemaRegistry:
            enabled: true
            urls: ["http://schema-registry:${SCHEMA_REGISTRY_PORT:-8081}"]
    ports:
      - "9001:8080"

  kafka-ui:
    profiles: ["disabled"]
    container_name: yozefu-kafka-ui
    image: ghcr.io/kafbat/kafka-ui
    ports:
      - "9002:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'

  kafdrop:
    profiles: ["disabled"]
    container_name: yozefu-kafdrop
    image: obsidiandynamics/kafdrop
    ports:
      - "9003:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:19092
      CMD_ARGS: "--schemaregistry.connect=http://schema-registry:${SCHEMA_REGISTRY_PORT:-8081}"

  kouncil:
    profiles: ["disabled"]
    container_name: yozefu-kouncil
    image: consdata/kouncil:latest
    ports:
      - "9004:8080"
    environment:
      - bootstrapServers="kafka:19092

  kpow:
    profiles: ["disabled"]
    image: factorhouse/kpow-ce:latest
    container_name: yozefu-kpow
    ports:
      - "9005:3000"

  provectus-kafka-ui:
    profiles: ["disabled"]
    container_name: yozefu-provectus
    image: provectuslabs/kafka-ui
    ports:
      - "9006:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'

  blazingkraft:
    profiles: ["disabled"]
    image: blazinginstruments/blazingkraft:latest
    ports: 
      - "7766:7766"
    environment:
      - BLAZINGKRAFT_ADMIN_EMAIL=root
      - BLAZINGKRAFT_ADMIN_PASSWORD=root

  pulsar:
    profiles: ["disabled"]
    image: apachepulsar/pulsar:4.0.0
    ports: 
      - "6650:6650"
      - "8080:8080"
    environment:
      - BLAZINGKRAFT_ADMIN_EMAIL=root
      - BLAZINGKRAFT_ADMIN_PASSWORD=root
    entrypoint: bin/pulsar standalone

  apicurio:
    profiles: ["disabled"]
    image: apicurio/apicurio-registry:latest
    ports:
      - "9007:8080"